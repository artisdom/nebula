   Compiling nebula v0.1.0 (/home/sami/Workspace/rust/nebula)
error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
    --> src/http_protocol_handler/utils.rs:9:42
     |
9    | pub fn read_file_content_as_string(path: Path) -> Result<String, String> {
     |                                          ^^^^ doesn't have a size known at compile-time
     |
     = help: within `Path`, the trait `Sized` is not implemented for `[u8]`, which is required by `Path: Sized`
note: required because it appears within the type `Path`
    --> /home/sami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/path.rs:2107:12
     |
2107 | pub struct Path {
     |            ^^^^
help: function arguments must have a statically known size, borrowed types always have a known size
     |
9    | pub fn read_file_content_as_string(path: &Path) -> Result<String, String> {
     |                                          +

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
    --> src/http_protocol_handler/utils.rs:14:38
     |
14   |     let content = fs::read_to_string(path).unwrap();
     |                   ------------------ ^^^^ doesn't have a size known at compile-time
     |                   |
     |                   required by a bound introduced by this call
     |
     = help: within `Path`, the trait `Sized` is not implemented for `[u8]`, which is required by `Path: Sized`
note: required because it appears within the type `Path`
    --> /home/sami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/path.rs:2107:12
     |
2107 | pub struct Path {
     |            ^^^^
note: required by an implicit `Sized` bound in `std::fs::read_to_string`
    --> /home/sami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/fs.rs:310:23
     |
310  | pub fn read_to_string<P: AsRef<Path>>(path: P) -> io::Result<String> {
     |                       ^ required by the implicit `Sized` requirement on this type parameter in `read_to_string`

error[E0308]: mismatched types
  --> src/http_protocol_handler/mod.rs:20:35
   |
20 |         let file_path = Path::new(format!("{}{}",&self.default_container, req_path));
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&_`, found `String`
   |
   = note: expected reference `&_`
                 found struct `String`
   = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> src/http_protocol_handler/mod.rs:21:57
   |
21 |         let result = utils::read_file_content_as_string(file_path).unwrap();
   |                      ---------------------------------- ^^^^^^^^^ expected `Path`, found `&Path`
   |                      |
   |                      arguments to this function are incorrect
   |
note: function defined here
  --> src/http_protocol_handler/utils.rs:9:8
   |
9  | pub fn read_file_content_as_string(path: Path) -> Result<String, String> {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ ----------

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
    --> src/http_protocol_handler/mod.rs:21:57
     |
21   |         let result = utils::read_file_content_as_string(file_path).unwrap();
     |                                                         ^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: within `Path`, the trait `Sized` is not implemented for `[u8]`, which is required by `Path: Sized`
note: required because it appears within the type `Path`
    --> /home/sami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/path.rs:2107:12
     |
2107 | pub struct Path {
     |            ^^^^
     = note: all function arguments must have a statically known size

Some errors have detailed explanations: E0277, E0308.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `nebula` (lib) due to 5 previous errors
